---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: true
  vars:
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule_instance_config: "{{ lookup('env', 'MOLECULE_INSTANCE_CONFIG') }}"
    molecule_yml: "{{ lookup('file', molecule_file) | molecule_from_yaml }}"

    ssh_user: ec2-user
    ssh_port: 22
    ec2:
      region: us-east-1
      vpc: vpc-036f71944d09d2588

    security_group_name: "molecule-{{ ansible_machine_id }}"
    security_group_description: Security group for testing Molecule
    security_group_rules:
      - proto: tcp
        from_port: "{{ ssh_port }}"
        to_port: "{{ ssh_port }}"
        cidr_ip: '20.0.28.0/25'
      - proto: icmp
        from_port: 8
        to_port: -1
        cidr_ip: '20.0.28.0/25'
      - proto: tcp
        from_port: 8443
        to_port: 8443
        cidr_ip: '20.0.28.0/25'
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: '20.0.28.0/25'
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: '20.0.28.0/25'
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: '20.0.28.0/25'
    security_group_rules_egress:
      - proto: -1
        from_port: 0
        to_port: 0
        cidr_ip: '20.0.28.0/25'

    keypair_name: "molecule_key-{{ ansible_machine_id }}-lab.common_credentils"
    keypair_path: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}/ssh_key"
  tasks:
    - include: security_group.yml
    - include: keypair.yml
    - name: Get the latest AMI ID
      ec2_ami_facts:
        region: "{{ ec2.region }}"
        filters:
          "tag:latest": "True"
          "tag:Name": "RHEL7_base_AMI"
      register: image_output
    - debug:
        var: image_output.images[0].image_id
    - name: Create molecule instance(s)
      ec2:
        region: "{{ ec2.region }}"
        key_name: "{{ keypair_name }}"
        image: "{{ image_output.images[0].image_id }}"
        instance_type: "{{ item.instance_type }}"
        vpc_subnet_id: "{{ item.vpc_subnet_id }}"
        group_id: "{{ ec2_security_group.group_id }}"
        instance_tags:
          instance: "{{ item.name }}"
          Name: "{{ item.name }}"
          # Charge_Code: "212345"
          OpCo: "Shared"
          Application: "Molecule"
        wait: true
        assign_public_ip: false
        exact_count: 1
        count_tag:
          instance: "{{ item.name }}"
      register: server
      with_items: "{{ molecule_yml.platforms }}"
      async: 7200
      poll: 0

    - name: Wait for instance(s) creation to complete
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: ec2_jobs
      until: ec2_jobs.finished
      retries: 300
      with_items: "{{ server.results }}"

    # Mandatory configuration for Molecule to function.

    - name: Populate instance config dict
      set_fact:
        instance_conf_dict: {
          'instance': "{{ item.instances[0].tags.instance }}",
          'address': "{{ item.instances[0].private_ip }}",
          'user': "{{ ssh_user }}",
          'port': "{{ ssh_port }}",
          'identity_file': "{{ keypair_path }}",
          'instance_ids': "{{ item.instance_ids }}", }
      with_items: "{{ ec2_jobs.results }}"
      register: instance_config_dict
      when: server.changed | bool

    - name: Convert instance config dict to a list
      set_fact:
        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
      when: server.changed | bool

    - name: Dump instance config
      copy:
        # NOTE(retr0h): Workaround for Ansible 2.2.
        #               https://github.com/ansible/ansible/issues/20885
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
      when: server.changed | bool

    - name: Wait for SSH
      wait_for:
        port: "{{ ssh_port }}"
        host: "{{ item.address }}"
        search_regex: SSH
        delay: 10
        timeout: 320
      with_items: "{{ lookup('file', molecule_instance_config) | molecule_from_yaml }}"

    - name: Wait for boot process to finish
      pause:
        minutes: 2
